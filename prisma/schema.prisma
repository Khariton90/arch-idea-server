generator client {
  provider = "prisma-client-js"
  output = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



// model QrCode {
//     id           String     @id @default(cuid())
//     user         User?      @relation(fields: [userId], references: [id])
//     userId       String?
//     department   Department @relation(fields: [departmentId], references: [id])
//     departmentId String
// }

enum Location {
  Parnas
  Industrialny
  KadSever
  Planernaya
  Murmanskoe
  Sofiyskaya
  Tallinskaya
  Slavyanka
  Other
}

model Department {
    id             String        @id @default(cuid())
    title          Location
    qrCodeHash     String        @unique
    createdAt      DateTime      @default(now())
    updatedAt      DateTime      @updatedAt 
}

enum Status {
    NotVerified
    Spec
    Master
    Pro
    Expert
    SuperExpert
}

enum Role {
    Admin
    Manager
    User
}

model RefreshToken {
    id                String         @id @default(cuid())
    modelName         String
    tokenId           String
    sub               String
    role              Role
    department        Location
    createdAt         DateTime?      @default(now())
}

model User {
    id                 String         @id @default(cuid())
    firstName          String
    lastName           String
    status             Status         @default(NotVerified)
    role               Role           @default(User)
    department         Location
    ideas              Idea[]    
    favoriteIdeas      FavoriteIdea[] @relation("Favorites")
    favoriteIdeasCount Int            @default(0)
    myIdeasCount       Int            @default(0)
    comment            Comment[]
    likes              Like[]
    dislikes           Dislike[]
    isDeleted          Boolean?
    email              String?
    passwordHash       String?
    createdAt          DateTime?      @default(now())
    updatedAt          DateTime?      @updatedAt 
}

model FavoriteIdea {
  userId  String
  ideaId  String
  user    User   @relation("Favorites", fields: [userId], references: [id])
  idea    Idea   @relation("Favorites", fields: [ideaId], references: [id])
  @@id([userId, ideaId]) 
}


enum SubDepartment {
  Warehouse
  SalesFloor
  CommercialDepartment
  Other
}

model Idea {
    id              String         @id @default(cuid())
    title           String
    description     String
    user            User           @relation(fields: [userId], references: [id])
    userId          String
    department      Location
    subDepartment   SubDepartment
    priority        Priority       @default(Low)
    status          IdeaStatus?    @default(New)
    createdAt       DateTime?      @default(now())
    updatedAt       DateTime?      @updatedAt 
    favoriteIdea    FavoriteIdea[] @relation("Favorites")
    comment Comment[]
    likes Like[]
    dislikes Dislike[]
}

enum Priority {
    Low
    Medium
    High
}

enum IdeaStatus {
    New
    InProgress
    Completed
    Canceled
}

model Comment {
    id        String   @id @default(cuid())
    content   String
    idea      Idea     @relation(fields: [ideaId], references: [id])
    ideaId    String
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Like {
    ideaId String
    userId String
    idea   Idea   @relation(fields: [ideaId], references: [id])  
    user   User   @relation(fields: [userId], references: [id])
    @@id([userId, ideaId]) 
}    

model Dislike {
    ideaId String
    userId String
    idea   Idea   @relation(fields: [ideaId], references: [id])
    user   User   @relation(fields: [userId], references: [id])
    @@id([userId, ideaId]) 
}
